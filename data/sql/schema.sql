CREATE TABLE audit_logger (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, module VARCHAR(96), action VARCHAR(96), object_id BIGINT, params LONGTEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE contact (id BIGINT AUTO_INCREMENT, email_address VARCHAR(128), first_name VARCHAR(32), last_name VARCHAR(32), phone_number BIGINT, is_approved TINYINT(1) DEFAULT '0' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE email (id BIGINT AUTO_INCREMENT, email_type VARCHAR(255), inmate_id BIGINT, contact_id BIGINT, scanned TINYINT(1) DEFAULT '0' NOT NULL, date_scanned DATETIME, subject VARCHAR(128), message text, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX inmate_id_idx (inmate_id), INDEX contact_id_idx (contact_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE email_incoming (id BIGINT AUTO_INCREMENT, email_id BIGINT NOT NULL, sender_email VARCHAR(128), inmate_viewed TINYINT(1) DEFAULT '0' NOT NULL, date_inmate_viewed DATETIME, INDEX email_id_idx (email_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE email_keyword (id BIGINT AUTO_INCREMENT, email_id BIGINT NOT NULL, keyword_id BIGINT NOT NULL, INDEX email_id_idx (email_id), INDEX keyword_id_idx (keyword_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE email_outgoing (id BIGINT AUTO_INCREMENT, email_id BIGINT NOT NULL, recipient_email VARCHAR(128), INDEX email_id_idx (email_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE flag (id BIGINT AUTO_INCREMENT, name VARCHAR(32), description text, weight BIGINT DEFAULT 0 NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE inmate (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, email_number BIGINT NOT NULL, jail_number BIGINT, balance DOUBLE(18, 2), contacts_approvable TINYINT(1) DEFAULT '0' NOT NULL, emails_approvable TINYINT(1) DEFAULT '0' NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE inmate_contact (id BIGINT AUTO_INCREMENT, inmate_id BIGINT NOT NULL, contact_id BIGINT NOT NULL, INDEX inmate_id_idx (inmate_id), INDEX contact_id_idx (contact_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE keyword (id BIGINT AUTO_INCREMENT, flag_id BIGINT NOT NULL, name VARCHAR(32), description text, weight BIGINT DEFAULT 0 NOT NULL, INDEX flag_id_idx (flag_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE officer (id BIGINT AUTO_INCREMENT, badge_number VARCHAR(32), user_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), middle_name VARCHAR(255), last_name VARCHAR(255), prefix VARCHAR(16), suffix VARCHAR(16), email_address VARCHAR(255), username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE audit_logger ADD CONSTRAINT audit_logger_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE email ADD CONSTRAINT email_inmate_id_inmate_id FOREIGN KEY (inmate_id) REFERENCES inmate(id);
ALTER TABLE email ADD CONSTRAINT email_contact_id_contact_id FOREIGN KEY (contact_id) REFERENCES contact(id);
ALTER TABLE email_incoming ADD CONSTRAINT email_incoming_email_id_email_id FOREIGN KEY (email_id) REFERENCES email(id);
ALTER TABLE email_keyword ADD CONSTRAINT email_keyword_keyword_id_keyword_id FOREIGN KEY (keyword_id) REFERENCES keyword(id);
ALTER TABLE email_keyword ADD CONSTRAINT email_keyword_email_id_email_id FOREIGN KEY (email_id) REFERENCES email(id);
ALTER TABLE email_outgoing ADD CONSTRAINT email_outgoing_email_id_email_id FOREIGN KEY (email_id) REFERENCES email(id);
ALTER TABLE inmate ADD CONSTRAINT inmate_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE inmate_contact ADD CONSTRAINT inmate_contact_inmate_id_inmate_id FOREIGN KEY (inmate_id) REFERENCES inmate(id);
ALTER TABLE inmate_contact ADD CONSTRAINT inmate_contact_contact_id_contact_id FOREIGN KEY (contact_id) REFERENCES contact(id);
ALTER TABLE keyword ADD CONSTRAINT keyword_flag_id_flag_id FOREIGN KEY (flag_id) REFERENCES flag(id);
ALTER TABLE officer ADD CONSTRAINT officer_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
